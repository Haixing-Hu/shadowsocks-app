'use strict';

let at = "@";

Object.defineProperty(exports, '__esModule', { value: true });

var lezer = require('./lezer.js');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const
  descendantOp = 93,
  Unit = 2,
  callee = 94,
  identifier = 95;

/* Hand-written tokenizers for CSS tokens that can't be
   expressed by Lezer's built-in tokenizer. */

const space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,
               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];
const colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,
      hash = 35, percent = 37;

function isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }

function isDigit(ch) { return ch >= 48 && ch <= 57 }

const identifiers = new lezer.ExternalTokenizer((input, token) => {
  let start = token.start, pos = start, inside = false;
  for (;;) {
    let next = input.get(pos);
    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {
      if (!inside && (next != dash || pos > start)) inside = true;
      pos++;
      continue
    }
    if (inside)
      token.accept(next == parenL ? callee : identifier, pos);
    break
  }
});

const descendant = new lezer.ExternalTokenizer((input, token) => {
  if (space.includes(input.get(token.start - 1))) {
    let next = input.get(token.start);
    if (isAlpha(next) || next == underscore || next == hash || next == period ||
        next == bracketL || next == colon || next == dash)
      token.accept(descendantOp, token.start);
  }
});

const unitToken = new lezer.ExternalTokenizer((input, token) => {
  let {start} = token;
  if (!space.includes(input.get(start - 1))) {
    let next = input.get(start);
    if (next == percent) token.accept(Unit, start + 1);
    if (isAlpha(next)) {
      let pos = start + 1;
      while (isAlpha(input.get(pos))) pos++;
      token.accept(Unit, pos);
    }
  }
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = lezer.Parser.deserialize({
  states: "7^OVO[OOOUOW'#Cc'#CcOUOW'#Cb'#CbO!SO[O'#CeO!WOXO'#C`O!tO[O'#CgO#OO[O'#C}O#SO[O'#DQOUOW'#Ec'#EcO#WOdO'#DdO#nO[O'#DqO#WOdO'#DsO$OO[O'#DuO$YO[O'#DxO$^O[O'#EOO$kO[O'#EQOUOW'#Eb'#EbOUOW(3Be(3BeQVO[OOOUOW'#Cf'#CfOUOW,59P,59PO!SO[O,59PO%OOWO'#EfO%YO[O'#ESO%pO[O,59RO#OO[O,59iO#SO[O,59lO%YO[O,59qO%YO[O,59sO%YO[O,59tO%zOWO,58zOUOW'#Ci'#CiOUOW'#Co'#CoOUOW,59R,59RO&OOWO,59RO&SOWO,59ROUOW'#DP'#DPOUOW,59i,59iOUOW'#DS'#DSO&WOWO,59lOUO`'#Cq'#CqO#WOdO'#CrO&_OfO'#CtO'eOdO,5:OOUOW'#Cy'#CyO&SOWO'#CxO'xOWO'#CzOUO`'#Eh'#EhOUOW'#Dg'#DgO'|O[O'#DnO(ZOWO'#EnO$^O[O'#DlO(hOWO'#DoOUOW'#Eo'#EoO%zOWO,5:]O(lO`O,5:_OUOW'#Dw'#DwO(sOWO,5:aO(wO[O,5:aOUOW'#Dz'#DzO)OOWO,5:dO)SOWO,5:jO)ZOWO,5:lOUOW,5:m,5:mOUOW1G.k1G.kOUOW,5:n,5:nO)bOXO-E8QOUOW1G.m1G.mO&OOWO1G.mO&SOWO1G.mOUOW1G/T1G/TO*ROWO1G/WO*YOXO1G/]O*yOXO1G/_O+jOXO1G/`O,ZO[O'#D[OUOW1G.f1G.fO-^O[O'#CkO-wOdO'#CpOUOW1G/W1G/WO#WOdO1G/WO.bO`O,59^OUO`,59`,59`O#WOdO,59bO.iOWO1G/jOUO`,59d,59dO.mOpO,59fO.tO`O'#DiO/OO`O,5:SO/SOWO,5:YO$^O[O,5:UO/ZOWO'#EpO$^O[O'#EYOUOW,5;Y,5;YO/eOWO,5:WO%YO[O,5:ZOUOW1G/w1G/wOUOW1G/y1G/yOUOW1G/{1G/{O/uOWO1G/{O/yOdO'#D{OUOW1G0O1G0OOUOW1G0U1G0UOUOW1G0W1G0WOUOW7+$X7+$XOUOW7+$r7+$rO#WOdO7+$rO0WO[O'#EkOUOW(3Bi(3BiO1ZO[O,59vO1bOXO'#EeO2OOWO,59VO2SOdO(3BgO2sOdO'#EgO3aOWO,59[O3eO`O7+$rOUO`1G.x1G.xOUO`1G.|1G.|OUOW7+%U7+%UO3lOWO1G/QO#WOdO1G/nOUOW1G/t1G/tOUOW1G/p1G/pOUOW,5:t,5:tO3pOWO-E8WO3}OXO1G/uOUOW7+%g7+%gO4hOYO'#CtO4oOdO'#EqO%zOWO'#EZO4|OWO,5:gO5QO`O<<H^OUOW,5:q,5:qOUO`'#D_'#D_O5XO`O'#D^OUOW1G/b1G/bO5]OWO1G/bOUOW,5;P,5;POUOW1G.q1G.qOUO`,5:o,5:oO5dOWO'#EjO#WOdO'#EUOUOW,5;R,5;ROUOW1G.v1G.vOUOW<<H^<<H^OUO`7+$l7+$lO5kOdO7+%YOUOW7+%a7+%aOUO`,5:u,5:uOUO`-E8X-E8XOUOW1G0R1G0ROUOWAN=xAN=xO#WOdO,59xO6UOWO'#EmO6]O[O'#EXO7cOWO7+$|OUOW,5:p,5:pO7gOdO-E8SOUOW<<Ht<<HtO8TOdO1G/dOUOW,5:s,5:sO8zO[O-E8VOUOW<<Hh<<HhO9UOdO(3BjO9{OdO'#ElO#WOdO'#EWO:oOWO7+%OOUOW3)-q3)-qOUO`,5:r,5:rO:yOdO-E8UOUOW<<Hj<<Hj",
  stateData: ";{ROS#TOS~TWOWWO[TOrUOuVO!X_O!YXO!fYO!hZO!j[O!m]O!s^O#RPO#WRO~#RcO~[hOagOriOujOzkO}mO#PlO#WeO!P#YP~^rO#QpO#RoO~#RtO~#RvO~`yOg!POi!POo!OO#Q|O#RxO#]zO~`!RO!a!TO!d!UO#R!QO!P#bP~i!ZOo!OO#R!YO~#R!]O~`!RO!a!TO!d!UO#R!QO~`!RO!a!TO!d!UO#R!QO!P#bP!U#bP~agO!P#YXb#YX~TWOWWO[TOrUOuVO#RPO#WRO~^!fO#QpO#RoO~!P!mO~`!oO~`!pO~w!rOx!qO~Q!tO`hXkhX!UhX!ahX!dhX#RhXbhXahXghXihXohX#QhX#]hXxhX!ThX!VhX~`!ROk!uO!a!TO!d!UO#R!QO!U#bP~`!xO~`!RO!a!TO!d!UO#R!yO~a#OO!_!|O!P#dP!U#dP~`#RO~k!uO!U#TO~!U#UO~i#VOo!OO~!P#WO~!P!mO!_!|O~!P!mO!U#ZO~[hOriOujOzkO}mO#PlO#WeOa!vc!P!vcb!vc~w#^Ox#]O~[hOriOujO#WeOayizyi}yi!Pyi#Pyibyi~[hOriOujO#WeOa{iz{i}{i!P{i#P{ib{i~[hOriOujO#WeOa|iz|i}|i!P|i#P|ib|i~TWOWWO[TOrUOuVO!X_O!YXO!fYO!hZO!j[O!m]O!s^O#RPO#WRO!V#_P#R#_P~TWOWWO[TOrUOuVO#RPO#WROb#XP~`yOg!POi!POo!OO#Q|O#RxO#]zOb#ZP~b#hOk!uO~!U#jO~i#kOp#kO~b!ZX!S!]X!_!ZX~!S#lO~b#mO!_!|O~a#OO!P#dX!U#dX~!_!|Oa!`a!P!`a!U!`ab!`a~!U#rO~!p#uO!q#uO#]#sO!V#eP~TWOWWO[TOrUOuVO!X_O!YXO!fYO!hZO!j[O!m]O!s^O#RPO#WRO!V#_X!U#_X~!V#{O#R#yO~[hOagOriOujOzkO}mO#PlO#WeOb#YP~b$OO~k!uO`!wZa!wZb!wZg!wZi!wZo!wZ#Q!wZ#R!wZ#]!wZ~`yOa$ROg!POi!POo!OO#Q|O#RxO#]zOb#^P~b$TO~k!uOx$UO~b$VO~!_!|Oa!|c!P!|c!U!|c~[hOb$XOriOujOzkO}mO#PlO#WeO~Q!tO!PhX~!p#uO!q#uO#]#sO!V#eX~!V$[O~k!uOx$]O~!S$^O~!U$`O!V#aP~a$ROb#^X~`yOb$dOg!POi!POo!OO#Q|O#RxO#]zO~!U$`O!V#aX~TWOWWO[TOrUOuVO!X_O!YXO!fYO!hZO!j[O!m]O!s^O#RPO#WRO!U#_P!V#_P#R#_P~!V$hO~`yOg!POi!POo!OO#Q|O#RxO#]zOa!xcb!xc~`yOa$kOg!POi!POk!uOo!OO#Q|O#RxO#]zO!T#`P!U#`P!V#`P~#R#yO!U!{c!V!{c~k!uO`!zZa!zZg!zZi!zZo!zZ!T!zZ!U!zZ!V!zZ#Q!zZ#R!zZ#]!zZ~`yOa$kOg!POi!POo!OO#Q|O#RxO#]zO!T#`X!U#`X!V#`X~!T$pO!U!Qq!V!Qq~k!uO`!zca!zcg!zci!zco!zc!T!zc!U!zc!V!zc#Q!zc#R!zc#]!zc~#TpR#]k}~#Q!X#R~",
  goto: ",[#fPPPP#gP#n#{P#n$Y#nP$`P$fPPP$l$r${${P%_P${P${%u&XPP#nP&q#nP&wPP#nP#n#nP&}P'^'dPPPP#gPP'h'h'r'hP'hP'h'hP#gP#gP#gP'u#gP'x'{PP#gP#g(O(U(](k(q(x)O)U)[PPPPPP)b)kP*U*X*_*bP+W+Z+a+d+g+p,U,XZ`Ob!m#_$`gWObgklm!m!o#R#_$`gQObgklm!m!o#R#_$`QdRR!beQqTR!ehQ!erR#[!fQsTR!ghQ!esQ!w}R#[!gq!PXZy!p!r!u#^#e#l$R$W$^$c$e$j$kp!PXZy!p!r!u#^#e#l$R$W$^$c$e$j$kT#u#W#tq}XZy!p!r!u#^#e#l$R$W$^$c$e$j$kp!PXZy!p!r!u#^#e#l$R$W$^$c$e$j$kQ!Z[R#V![QuUR!hiQwVR!ijQ!nnQ#S!WQ#Y!_Q#Z!`R$Z#uQ#|#aR$m$gT#z#a$ga!VY^_{!R!T!|#OR!z!RR![[R!^]R#X!^QbOR!abSfS#bR!cfQ#e!pU$P#e$W$cQ$W#lR$c$RQ$Q#eR$b$QS#_!m$`R#x#_Q$j$eR$n$jQ$_#|R$f$_Q!}!SR#o!}Q#t#WR$Y#tSaObV#`!m#_$`YSOb!m#_$`Q!dgQ!jkQ!klQ!lmQ#b!oR#q#RR#c!oQnSR#}#bR#f!pQ{XQ!XZQ!sy[#d!p#e#l$R$W$cQ#g!rQ#i!uQ#w#^Q$e$^S$i$e$jR$o$kR$S#eQ#a!mR$g$`R$l$eR$a#|Q!WYQ!`_R!v{U!SY_{Q!_^Q!{!RQ#Q!TQ#n!|R#p#OR#P!SR#v#W",
  nodeNames: "âš  StyleSheet Unit Comment RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector PseudoOp PseudoClassName not ArgList ( , ) PseudoClassName ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent IdSelector # IdName AttributeSelector [ AttributeName MatchOp ] ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp Block { Declaration PropertyName : Important ; } ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery callee MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList from to SupportsStatement supports AtRule",
  nodeProps: [
    [lezer.NodeProp.top, 1,true],
    [lezer.NodeProp.delim, 15,"( )",20,"( )",22,"( )",46,"{ }",58,"( )",64,"( )",77,"{ }"]
  ],
  repeatNodeCount: 9,
  tokenData: "Bl~R![OX$wX^%]^p$wpq%]qr(crs+}st,otu2Uuv$wvw2rwx2}xy3jyz3uz{3z{|4_|}8u}!O9Q!O!P9i!P!Q9z!Q![<U![!]<y!]!^=k!^!_$w!_!`=v!`!a>R!a!b$w!b!c>q!c!}$w!}#O?}#O#P$w#P#Q@Y#Q#R2U#R#T$w#T#U@e#U#c$w#c#dAd#d#o$w#o#pAs#p#q2U#q#rBO#r#sBZ#s#y$w#y#z%]#z$f$w$f$g%]$g#BY$w#BY#BZ%]#BZ$IS$w$IS$I_%]$I_$I|$w$I|$JO%]$JO$JT$w$JT$JU%]$JU$KV$w$KV$KW%]$KW&FU$w&FU&FV%]&FV~$wS$zQOy%Qz~%QS%VQpSOy%Qz~%Q~%bf#T~OX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%Q~&}f#T~pSOX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%QV(fSOy%Qz#]%Q#]#^(r#^~%QV(wSpSOy%Qz#a%Q#a#b)T#b~%QV)YSpSOy%Qz#d%Q#d#e)f#e~%QV)kSpSOy%Qz#c%Q#c#d)w#d~%QV)|SpSOy%Qz#f%Q#f#g*Y#g~%QV*_SpSOy%Qz#h%Q#h#i*k#i~%QV*pSpSOy%Qz#T%Q#T#U*|#U~%QV+RSpSOy%Qz#b%Q#b#c+_#c~%QV+dSpSOy%Qz#h%Q#h#i+p#i~%QV+wQ!TRpSOy%Qz~%Q~,QUOY+}Zr+}rs,ds#O+}#O#P,i#P~+}~,iOi~~,lPO~+}V,tWrPOy%Qz!Q%Q!Q![-^![!c%Q!c!i-^!i#T%Q#T#Z-^#Z~%QU-cWpSOy%Qz!Q%Q!Q![-{![!c%Q!c!i-{!i#T%Q#T#Z-{#Z~%QU.QWpSOy%Qz!Q%Q!Q![.j![!c%Q!c!i.j!i#T%Q#T#Z.j#Z~%QU.qWgQpSOy%Qz!Q%Q!Q![/Z![!c%Q!c!i/Z!i#T%Q#T#Z/Z#Z~%QU/bWgQpSOy%Qz!Q%Q!Q![/z![!c%Q!c!i/z!i#T%Q#T#Z/z#Z~%QU0PWpSOy%Qz!Q%Q!Q![0i![!c%Q!c!i0i!i#T%Q#T#Z0i#Z~%QU0pWgQpSOy%Qz!Q%Q!Q![1Y![!c%Q!c!i1Y!i#T%Q#T#Z1Y#Z~%QU1_WpSOy%Qz!Q%Q!Q![1w![!c%Q!c!i1w!i#T%Q#T#Z1w#Z~%QU2OQgQpSOy%Qz~%QT2XSOy%Qz!_%Q!_!`2e!`~%QT2lQwPpSOy%Qz~%QT2wQWPOy%Qz~%Q~3QUOY2}Zw2}wx,dx#O2}#O#P3d#P~2}~3gPO~2}V3oQ`ROy%Qz~%Q~3zOb~V4RSTPkQOy%Qz!_%Q!_!`2e!`~%QV4fUkQ}POy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%QU4}SpSOy%Qz!Q%Q!Q![5Z![~%QU5bWpS#]QOy%Qz!Q%Q!Q![5Z![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%QU6PWpSOy%Qz{%Q{|6i|}%Q}!O6i!O!Q%Q!Q![6z![~%QU6nSpSOy%Qz!Q%Q!Q![6z![~%QU7RSpS#]QOy%Qz!Q%Q!Q![6z![~%QU7fYpS#]QOy%Qz!O%Q!O!P8U!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%QU8]WpS#]QOy%Qz!Q%Q!Q![8U![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%QV8zQaROy%Qz~%QU9VUkQOy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%QV9nS#WPOy%Qz!Q%Q!Q![5Z![~%Q~:PRkQOy%Qz{:Y{~%Q~:_SpSOy:Yyz:kz{;`{~:Y~:nROz:kz{:w{~:k~:zTOz:kz{:w{!P:k!P!Q;Z!Q~:k~;`OR~~;eUpSOy:Yyz:kz{;`{!P:Y!P!Q;w!Q~:Y~<OQpSR~Oy%Qz~%QU<ZY#]QOy%Qz!O%Q!O!P8U!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%QV=QS!SQ[POy%Qz![%Q![!]=^!]~%QT=eQ[PpSOy%Qz~%QV=pQ!UROy%Qz~%QT={QwPOy%Qz~%QT>WSzPOy%Qz!`%Q!`!a>d!a~%QT>kQzPpSOy%Qz~%QT>tUOy%Qz!c%Q!c!}?W!}#T%Q#T#o?W#o~%QT?_Y!XPpSOy%Qz}%Q}!O?W!O!Q%Q!Q![?W![!c%Q!c!}?W!}#T%Q#T#o?W#o~%QT@SQuPOy%Qz~%QV@_QxROy%Qz~%QV@hSOy%Qz#b%Q#b#c@t#c~%QV@ySpSOy%Qz#W%Q#W#XAV#X~%QVA^Q!_RpSOy%Qz~%QVAgSOy%Qz#f%Q#f#gAV#g~%QTAxQ!PPOy%Qz~%QVBTQ!VROy%Qz~%QTB`S}POy%Qz!_%Q!_!`2e!`~%Q",
  tokenizers: [descendant, unitToken, identifiers, 0, 1, 2],
  specializeTable: 1235,
  specializations: [{not:28, url:62, "url-prefix":62, domain:62, regexp:62, selector:132},
   {[`${at}import`]:112, [`${at}media`]:136, [`${at}charset`]:140, [`${at}namespace`]:144, [`${at}keyframes`]:150, [`${at}supports`]:162},
   {not:126, only:126, from:156, to:158}],
  tokenPrec: 1228
});

exports.parser = parser;
